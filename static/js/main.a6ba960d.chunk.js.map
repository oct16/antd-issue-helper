{"version":3,"sources":["IssueForm.module.scss","Intro.module.scss","en-US.ts","zh-CN.ts","LocaleContext.ts","I18n.tsx","IntroModal.tsx","Intro.tsx","BugForm.tsx","FeatureForm.tsx","PreviewModal.tsx","ReproModal.tsx","createPreview.ts","api.ts","hooks/useSimilarIssues.ts","IssueForm.tsx","hooks/useVersions.ts","App.tsx","index.tsx","App.module.scss"],"names":["module","exports","enMessages","require","window","appLocale","en","messages","locale","data","appLocaleData","zhMessages","zh","LocaleContext","createContextIO","cache","localStorage","getItem","navigator","language","toLowerCase","getLocale","texts","intro","introModal","motivationHelp","proposalHelp","reproHelp","reproModal","stepsHelp","I18n","id","restProps","React","Text","IntroModal","visible","onCancel","title","defaultMessage","footer","width","className","Intro","useState","modalVisible","setModalVisible","introRef","current","addEventListener","e","target","getAttribute","preventDefault","styles","ref","FormItem","Form","Item","Option","Select","TextArea","Input","BugForm","versions","span","name","label","help","showSearch","map","version","key","value","rules","required","offset","extra","type","autoSize","minRows","FeatureForm","md","Remarkable","PreviewModal","content","onCreate","cancelText","onClick","dangerouslySetInnerHTML","__html","render","ReproModal","createPreview","issueType","values","react","system","browser","reproduction","steps","expected","actual","repo","link","indexOf","createReproductionLink","trim","createBugPreview","motivation","proposal","createFeaturePreview","compareVersions","npmMapping","TimeCat","checkStatus","response","status","Error","statusText","fetchVersions","fetch","then","json","Object","keys","normalVersions","nextVersions","forEach","match","includes","push","sort","a","b","orderVersions","slice","useSimilarIssues","similarIssues","searchIssues","keyword","q","encodeURIComponent","items","api","_issues","params","location","search","split","reduce","acc","param","IssueForm","reproModalVisible","setReproModalVisible","useForm","form","getContent","useCallback","getFieldsValue","setContent","preview","setPreview","triggerPreview","newPreview","getFieldValue","formRef","repoVersions","setRepoVersions","useVersions","bindModalHandler","restoreValues","omitFields","JSON","parse","setFieldsValue","setTimeout","currentValues","handleRepoChange","resetFields","handleTypeChange","handleTitleBlur","handleCreate","replace","withConfirm","withMarker","body","clear","open","similarIssuesList","similar","issue","href","html_url","rel","Bowser","getParser","userAgent","layout","size","initialValues","getOSName","getOSVersion","getBrowserName","getBrowserVersion","onFinish","onValuesChange","_","preForm","err","cacheForm","undefined","setItem","stringify","onChange","Group","radioGroup","Button","onBlur","length","noStyle","shouldUpdate","prev","next","submitBtn","htmlType","icon","BugOutlined","Header","Layout","Content","Footer","App","localeString","forceUpdateLocale","addLocaleData","Provider","header","headerContainer","logo","alt","src","read","write","switchLocale","style","textAlign","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a6ba960d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"IssueForm_submitBtn__2i6iD\",\"radioGroup\":\"IssueForm_radioGroup__3pcx2\",\"similar\":\"IssueForm_similar__32aVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"Intro_intro__3VhcL\"};","import * as appLocaleData from 'react-intl/locale-data/en'\n\nconst enMessages: any = require('./locales/en.json')\n\n;(window as any).appLocale.en = {\n    messages: {\n        ...enMessages\n    },\n    locale: 'en-US',\n    data: appLocaleData\n}\n","import * as appLocaleData from 'react-intl/locale-data/zh'\n\nconst zhMessages: any = require('./locales/zh.json')\n\n;(window as any).appLocale.zh = {\n    messages: {\n        ...zhMessages\n    },\n    locale: 'zh-CN',\n    data: appLocaleData\n}\n","import { createContextIO } from 'react-context-io'\n\nfunction getLocale() {\n    const cache = window.localStorage.getItem('locale')\n    if (cache) {\n        return cache\n    }\n    return window.navigator.language.toLowerCase() === 'zh-cn' ? 'zh' : 'en'\n}\n\nconst LocaleContext = createContextIO<string>(getLocale())\n\nexport function switchLocale(forceUpdateLocale: any) {\n    const locale = LocaleContext.read() === 'en' ? 'zh' : 'en'\n    forceUpdateLocale(locale)\n    LocaleContext.write(locale)\n    window.localStorage.setItem('locale', LocaleContext.read())\n}\n\nexport default LocaleContext\n","import * as React from 'react'\nimport { importMDX } from 'mdx.macro'\nimport LocaleContext from './LocaleContext'\n\nconst texts: any = {\n    en: {\n        intro: importMDX.sync('./locales/en/intro.md'),\n        introModal: importMDX.sync('./locales/en/introModal.md'),\n        motivationHelp: importMDX.sync('./locales/en/motivationHelp.md'),\n        proposalHelp: importMDX.sync('./locales/en/proposalHelp.md'),\n        reproHelp: importMDX.sync('./locales/en/reproHelp.md'),\n        reproModal: importMDX.sync('./locales/en/reproModal.md'),\n        stepsHelp: importMDX.sync('./locales/en/stepsHelp.md')\n    },\n    zh: {\n        intro: importMDX.sync('./locales/zh/intro.md'),\n        introModal: importMDX.sync('./locales/zh/introModal.md'),\n        motivationHelp: importMDX.sync('./locales/zh/motivationHelp.md'),\n        proposalHelp: importMDX.sync('./locales/zh/proposalHelp.md'),\n        reproHelp: importMDX.sync('./locales/zh/reproHelp.md'),\n        reproModal: importMDX.sync('./locales/zh/reproModal.md'),\n        stepsHelp: importMDX.sync('./locales/zh/stepsHelp.md')\n    }\n}\n\nexport interface Props {\n    id: string\n    [name: string]: any\n}\n\nconst I18n: React.FC<Props> = ({ id, ...restProps }) => {\n    const locale = React.useContext(LocaleContext)\n    const Text = texts[locale][id]\n\n    return (\n        <div {...restProps}>\n            <Text />\n        </div>\n    )\n}\n\nexport default I18n\n","import * as React from 'react'\nimport { Modal } from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport I18n from './I18n'\n\ninterface Props {\n    visible: boolean\n    onCancel: () => any\n}\n\nconst IntroModal: React.FC<Props> = ({ visible, onCancel }) => (\n    <Modal\n        title={<FormattedMessage id=\"intro.modal\" defaultMessage=\"The reason behind our strict issue policy\" />}\n        footer=\"\"\n        visible={visible}\n        onCancel={onCancel}\n        width=\"680px\"\n    >\n        <I18n className=\"paragraph\" id=\"introModal\" />\n    </Modal>\n)\n\nexport default IntroModal\n","import * as React from 'react'\nimport IntroModal from './IntroModal'\nimport I18n from './I18n'\nimport styles from './Intro.module.scss'\nimport { useState } from 'react'\n\nconst Intro: React.FC = () => {\n    const [modalVisible, setModalVisible] = useState(false)\n    const introRef = React.useRef<null | HTMLDivElement>(null)\n\n    React.useEffect(() => {\n        introRef.current!.addEventListener('click', (e: Event) => {\n            if ((e.target as any).getAttribute('href') === '#intro-modal') {\n                e.preventDefault()\n                setModalVisible(true)\n            }\n        })\n    }, [])\n\n    return (\n        <div className={`${styles.intro} paragraph`} ref={introRef}>\n            <IntroModal visible={modalVisible} onCancel={() => setModalVisible(false)} />\n            <I18n id=\"intro\" />\n        </div>\n    )\n}\n\nexport default Intro\n","import * as React from 'react'\nimport { Form, Row, Col, Input, Select } from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport I18n from './I18n'\n\nconst FormItem = Form.Item\nconst { Option } = Select\nconst { TextArea } = Input\n\ninterface Props {\n    versions: string[]\n}\n\nconst BugForm: React.FC<Props> = ({ versions }) => (\n    <div>\n        {/* ==================================== Environment ==================================== */}\n        <Form.Item>\n            <Row>\n                <Col span={11}>\n                    {/* antd version */}\n                    <FormItem\n                        name=\"version\"\n                        label={<FormattedMessage id=\"issue.version\" defaultMessage=\"Version\" />}\n                        help={\n                            <FormattedMessage\n                                id=\"issue.versionHelp\"\n                                defaultMessage=\"Check if the issue is reproducible with the latest stable version.\"\n                            />\n                        }\n                    >\n                        <Select showSearch={true}>\n                            {versions.map(version => (\n                                <Option key={version} value={version}>\n                                    {version}\n                                </Option>\n                            ))}\n                        </Select>\n                    </FormItem>\n                </Col>\n            </Row>\n        </Form.Item>\n\n        <Form.Item>\n            <Row>\n                {/* System */}\n                <Col span={11}>\n                    <FormItem\n                        name=\"system\"\n                        rules={[{ required: true }]}\n                        label={<FormattedMessage id=\"issue.system\" defaultMessage=\"System\" />}\n                        help={<FormattedMessage id=\"issue.systemHelp\" defaultMessage=\"System version...\" />}\n                    >\n                        <Input />\n                    </FormItem>\n                </Col>\n\n                {/* Browser */}\n                <Col span={12} offset={1}>\n                    <FormItem\n                        name=\"browser\"\n                        rules={[{ required: true }]}\n                        label={<FormattedMessage id=\"issue.browser\" defaultMessage=\"Browser\" />}\n                        help={<FormattedMessage id=\"issue.browserHelp\" defaultMessage=\"Browser version...\" />}\n                    >\n                        <Input />\n                    </FormItem>\n                </Col>\n            </Row>\n        </Form.Item>\n\n        {/* ==================================== Reproduce ==================================== */}\n        <FormItem\n            name=\"reproduction\"\n            rules={[\n                {\n                    required: true\n                }\n            ]}\n            label={<FormattedMessage id=\"issue.reproduction\" defaultMessage=\"Link to minimal reproduction\" />}\n            extra={<I18n id=\"reproHelp\" />}\n        >\n            <Input type=\"url\" />\n        </FormItem>\n\n        <FormItem\n            name=\"steps\"\n            rules={[{ required: true }]}\n            label={<FormattedMessage id=\"issue.steps\" defaultMessage=\"Step to reproduce\" />}\n            extra={<I18n id=\"stepsHelp\" />}\n        >\n            <TextArea autoSize={{ minRows: 2 }} />\n        </FormItem>\n\n        <FormItem\n            name=\"expected\"\n            rules={[{ required: true }]}\n            label={<FormattedMessage id=\"issue.expected\" defaultMessage=\"What is expected?\" />}\n        >\n            <TextArea autoSize={{ minRows: 2 }} />\n        </FormItem>\n        <FormItem\n            name=\"actual\"\n            rules={[{ required: true }]}\n            label={<FormattedMessage id=\"issue.actually\" defaultMessage=\"What is actually happening?\" />}\n        >\n            <TextArea autoSize={{ minRows: 2 }} />\n        </FormItem>\n        <FormItem\n            name=\"extra\"\n            label={<FormattedMessage id=\"issue.extra\" defaultMessage=\"Any additional comments?(optional)\" />}\n            help={\n                <FormattedMessage\n                    id=\"issue.extraHelp\"\n                    defaultMessage=\"e.g. some background/context of how you ran into this bug.\"\n                />\n            }\n        >\n            <TextArea autoSize={{ minRows: 2 }} />\n        </FormItem>\n    </div>\n)\n\nexport default BugForm\n","import * as React from 'react'\nimport { Form, Input } from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport I18n from './I18n'\n\nconst FormItem = Form.Item\nconst { TextArea } = Input\n\nconst FeatureForm: React.FC<{}> = () => (\n    <div>\n        <FormItem\n            name=\"motivation\"\n            rules={[{ required: true }]}\n            label={<FormattedMessage id=\"issue.motivation\" defaultMessage=\"What problem does this feature solve?\" />}\n            extra={<I18n id=\"motivationHelp\" />}\n        >\n            <TextArea autoSize={{ minRows: 2 }} />\n        </FormItem>\n        <FormItem\n            name=\"proposal\"\n            rules={[{ required: true }]}\n            label={<FormattedMessage id=\"issue.proposal\" defaultMessage=\"What does the proposed API look like?\" />}\n            extra={<I18n id=\"proposalHelp\" />}\n        >\n            <TextArea autoSize={{ minRows: 2 }} />\n        </FormItem>\n    </div>\n)\n\nexport default FeatureForm\n","import * as React from 'react'\nimport { Modal, Button } from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport Remarkable from 'remarkable'\n\nconst md = new Remarkable()\n\ninterface Props {\n    visible: boolean\n    content: string\n    onCancel: () => any\n    onCreate: () => any\n}\n\nconst PreviewModal: React.FC<Props> = ({ visible, content, onCancel, onCreate }) => (\n    <Modal\n        title={<FormattedMessage id=\"previewModal.title\" defaultMessage=\"Issue Preview\" />}\n        cancelText=\"\"\n        width=\"680px\"\n        visible={visible}\n        onCancel={onCancel}\n        footer={\n            <Button onClick={onCreate} type=\"primary\">\n                <FormattedMessage id=\"issue.create\" defaultMessage=\"Create\" />\n            </Button>\n        }\n    >\n        <div className=\"paragraph\" dangerouslySetInnerHTML={{ __html: md.render(content) }} />\n    </Modal>\n)\n\nexport default PreviewModal\n","import * as React from 'react'\nimport { Modal } from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport I18n from './I18n'\n\ninterface Props {\n    visible: boolean\n    onCancel: () => any\n}\n\nconst ReproModal: React.FC<Props> = ({ visible, onCancel }) => {\n    return (\n        <Modal\n            title={<FormattedMessage id=\"repro.about\" defaultMessage=\"About Reproductions\" />}\n            footer=\"\"\n            visible={visible}\n            onCancel={onCancel}\n            width=\"680px\"\n        >\n            <I18n className=\"paragraph\" id=\"reproModal\" />\n        </Modal>\n    )\n}\n\nexport default ReproModal\n","export default function createPreview(issueType: string, values: any) {\n    if (issueType === 'bug') {\n        return createBugPreview(values)\n    }\n    return createFeaturePreview(values)\n}\n\nfunction createBugPreview({\n    version,\n    react,\n    system,\n    browser,\n    reproduction,\n    steps,\n    expected,\n    actual,\n    extra,\n    repo\n}: any) {\n    return `\n### Reproduction link\n${createReproductionLink(reproduction)}\n\n### Steps to reproduce\n${steps}\n\n### What is expected?\n${expected}\n\n### What is actually happening?\n${actual}\n\n| Environment | Info |\n|---|---|\n| System | ${system} |\n| Browser | ${browser} |\n\n${extra ? `---\\n${extra}` : ''}\n`.trim()\n}\n\nfunction createFeaturePreview({ motivation, proposal }: any) {\n    return `\n### What problem does this feature solve?\n${motivation}\n\n### What does the proposed API look like?\n${proposal}\n`.trim()\n}\n\nfunction createReproductionLink(link: string) {\n    if (!link) {\n        return\n    }\n\n    if (link.indexOf('codesandbox.io') >= 0) {\n        return `[![Edit on CodeSandbox](https://codesandbox.io/static/img/play-codesandbox.svg)](${link})`\n    }\n\n    return `[${link}](${link})`\n}\n","const compareVersions: any = require('compare-versions')\n\ninterface Response {\n    status: number\n    statusText: string\n    json(): any\n}\n\nconst npmEndpoint = 'https://registry.npm.taobao.org'\nconst endpoint = 'https://api.github.com'\n\nconst npmMapping: { [repo: string]: string } = {\n    TimeCat: 'timecatjs'\n}\n\nfunction checkStatus(response: Response) {\n    if (response.status >= 200 && response.status < 300) {\n        return response\n    } else {\n        throw new Error(response.statusText)\n    }\n}\n\nfunction orderVersions(versions: string[]): string[] {\n    const normalVersions: string[] = []\n    const nextVersions: string[] = []\n    versions.forEach(version => {\n        if (version.match(/^\\d+\\.\\d+\\.\\d+$/) || version.includes('-rc.')) {\n            normalVersions.push(version)\n        } else {\n            nextVersions.push(version)\n        }\n    })\n\n    return [\n        ...nextVersions.sort((a: string, b: string) => -compareVersions(a, b)),\n        ...normalVersions.sort((a: string, b: string) => -compareVersions(a, b))\n    ]\n}\n\nexport function fetchVersions(repo: string) {\n    return fetch(`${npmEndpoint}/${npmMapping[repo]}`)\n        .then(checkStatus)\n        .then((response: Response) => response.json())\n        .then(\n            ({ versions }) => Object.keys(versions) //.filter((ver) => !ver.includes(\"-\"))\n        )\n        .then(versions => orderVersions(versions))\n        .then(versions => versions.slice(0, 100))\n\n    // // We use github versions first, but if failed use npm versions as backup\n    // return fetch(`${endpoint}/repos/oct16/${repo}/releases?per_page=100`)\n    //   .then(checkStatus)\n    //   .then((response: Response) => response.json())\n    //   .then((releases) => releases.filter((r: any) => !r.prerelease))\n    //   .then((releases) => releases.map((r: any) => r.tag_name))\n    //   .then((versions) => orderVersions(versions))\n    //   .catch((err) => {\n    //     console.warn(err);\n    //     return npmPromise;\n    //   });\n}\n\nexport function fetchIssues(repo: string, keyword: string) {\n    const q = encodeURIComponent(`is:issue repo:ant-design/${repo} ${keyword}`)\n    return fetch(`${endpoint}/search/issues?q=${q}&per_page=5`)\n        .then(checkStatus)\n        .then((response: Response) => response.json())\n        .then(json => json.items)\n}\n","import * as api from '../api'\nimport { state } from 'reactive.macro'\n\nexport default function useSimilarIssues() {\n    let similarIssues: any[] = state([])\n\n    const searchIssues = (repo: string, title: string) => {\n        if (title) {\n            api.fetchIssues(repo, title).then(_issues => (similarIssues = _issues))\n        } else {\n            similarIssues = []\n        }\n    }\n\n    return {\n        similarIssues,\n        searchIssues\n    }\n}\n","import * as React from 'react'\nimport { Form, Row, Col, Input, Select, Button, Radio } from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport { BugOutlined } from '@ant-design/icons'\nimport BugForm from './BugForm'\nimport FeatureForm from './FeatureForm'\nimport PreviewModal from './PreviewModal'\nimport ReproModal from './ReproModal'\nimport createPreview from './createPreview'\nimport useSimilarIssues from './hooks/useSimilarIssues'\nimport useVersions from './hooks/useVersions'\nimport styles from './IssueForm.module.scss'\nimport Bowser from 'bowser'\nimport { useCallback, useState } from 'react'\n\nconst { Option } = Select\n\nconst params: any = window.location.search\n    .slice(1)\n    .split('&')\n    .reduce((acc, param) => {\n        const [key, value] = param.split('=')\n        return { ...acc, [key]: value }\n    }, {}) // tslint:disable-line\n\nif (!params.repo) {\n    params.repo = 'TimeCat'\n}\n\nconst IssueForm: React.FC<{}> = () => {\n    const [reproModalVisible, setReproModalVisible] = useState(false)\n\n    const [form] = Form.useForm()\n    const getContent = useCallback((type: string) => createPreview(type, form.getFieldsValue()), [form])\n\n    const [content, setContent] = React.useState('')\n    const [preview, setPreview] = React.useState(false)\n    const triggerPreview = (newPreview: boolean) => {\n        setContent(getContent(form.getFieldValue('type')))\n        setPreview(newPreview)\n    }\n\n    const formRef = React.useRef<HTMLDivElement | null>(null)\n    const { similarIssues, searchIssues } = useSimilarIssues()\n    const { repoVersions, fetchVersions } = useVersions()\n\n    const bindModalHandler = React.useCallback(() => {\n        formRef.current!.addEventListener('click', (e: Event) => {\n            if ((e.target as any).getAttribute('href') === '#repro-modal') {\n                e.preventDefault()\n                setReproModalVisible(true)\n            }\n        })\n    }, [])\n\n    // Load form data from localStorage\n    const restoreValues = React.useCallback(\n        (omitFields: Array<string> = []) => {\n            const cache = localStorage.getItem('form')\n            if (cache) {\n                const values = JSON.parse(cache)\n                const keys = Object.keys(values)\n\n                // Remove unless fields\n                omitFields.forEach(key => {\n                    delete values[key]\n                })\n\n                if (values.type) {\n                    form.setFieldsValue({\n                        type: values.type\n                    })\n                }\n\n                // Next frame (IE 9 not support RAF)\n                setTimeout(() => {\n                    // Remove useless value\n                    const currentValues = form.getFieldsValue()\n                    keys.forEach(key => {\n                        if (!(key in currentValues)) {\n                            delete values[key]\n                        }\n                    })\n\n                    form.setFieldsValue(values)\n                }, 100)\n            }\n        },\n        [form]\n    )\n\n    const handleRepoChange = React.useCallback(\n        (repo: string) => {\n            form.resetFields(['version'])\n            if (!repoVersions[repo]) {\n                fetchVersions(repo)\n            }\n        },\n        [form, repoVersions, fetchVersions]\n    )\n\n    const handleTypeChange = React.useCallback(() => {\n        restoreValues(['type'])\n    }, [restoreValues])\n\n    const handleTitleBlur = React.useCallback(() => {\n        const repo = form.getFieldValue('repo')\n        const title = form.getFieldValue('title')\n        searchIssues(repo, title)\n    }, [form, searchIssues])\n\n    const handleCreate = React.useCallback(() => {\n        const issueType = form.getFieldValue('type')\n        const repo = form.getFieldValue('repo')\n        const title = encodeURIComponent(form.getFieldValue('title')).replace(/%2B/gi, '+')\n        const content = getContent(issueType)\n        const withConfirm = `\n- [ ] I have searched the [issues](https://github.com/oct16/${repo}/issues) \\\nof this repository and believe that this is not a duplicate.\n\n${content}\n`\n        const withMarker = `${withConfirm}\\n\\n<!-- generated by ant-design-issue-helper. DO NOT REMOVE -->`\n        const body = encodeURIComponent(withMarker).replace(/%2B/gi, '+')\n        const label = issueType === 'feature' ? '&labels=💡%20Feature%20Request' : ''\n\n        localStorage.clear()\n\n        window.open(`https://github.com/oct16/${repo}/issues/new?title=${title}&body=${body}${label}`)\n    }, [form, getContent])\n\n    React.useEffect(() => {\n        fetchVersions(params.repo)\n        bindModalHandler()\n        restoreValues()\n        bindModalHandler()\n    }, [fetchVersions, bindModalHandler, restoreValues])\n\n    const repo = form.getFieldValue('repo')\n    const versions = repoVersions[repo] || []\n\n    const similarIssuesList = (\n        <Form.Item className={styles.similar}>\n            <h3>Similar Issues:</h3>\n            <ul>\n                {similarIssues.map(issue => (\n                    <li key={issue.id}>\n                        <a href={issue.html_url} target=\"_blank\" rel=\"noreferrer noopener\">\n                            {issue.title}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </Form.Item>\n    )\n\n    const browser = Bowser.getParser(window.navigator.userAgent)\n\n    return (\n        <div ref={formRef}>\n            <Form\n                form={form}\n                layout=\"vertical\"\n                size=\"large\"\n                initialValues={{\n                    system: browser.getOSName() + ' ' + browser.getOSVersion(),\n                    browser: browser.getBrowserName() + ' ' + browser.getBrowserVersion(),\n                    repo: params.repo,\n                    type: 'bug',\n                    version: versions[0]\n                }}\n                onFinish={() => {\n                    triggerPreview(true)\n                }}\n                onValuesChange={(_, values) => {\n                    let preForm = {}\n                    try {\n                        preForm = JSON.parse(localStorage.getItem('form') as string) || {}\n                    } catch (err) {\n                        // Do nothing\n                    }\n                    const cacheForm: any = {\n                        ...preForm\n                    }\n                    Object.keys(values).forEach(key => {\n                        cacheForm[key] = values[key] === '' ? undefined : values[key]\n                    })\n                    localStorage.setItem('form', JSON.stringify(cacheForm, null, 2))\n                }}\n            >\n                <PreviewModal\n                    visible={preview}\n                    content={content}\n                    onCancel={() => {\n                        triggerPreview(false)\n                    }}\n                    onCreate={handleCreate}\n                />\n                <ReproModal visible={reproModalVisible} onCancel={() => setReproModalVisible(false)} />\n                <Row>\n                    <Col span={11}>\n                        <Form.Item\n                            name=\"repo\"\n                            label={<FormattedMessage id=\"issue.repo\" defaultMessage=\"I am opening an issue for\" />}\n                            help={\n                                <FormattedMessage\n                                    id=\"issue.repoHelp\"\n                                    defaultMessage=\"Please make sure to file the issue at appropriate repo.\"\n                                />\n                            }\n                        >\n                            <Select onChange={handleRepoChange}>\n                                <Option value=\"TimeCat\">TimeCat</Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12} offset={1}>\n                        <Form.Item name=\"type\" label={<FormattedMessage id=\"issue.type\" defaultMessage=\"This is a\" />}>\n                            <Radio.Group onChange={handleTypeChange} className={styles.radioGroup}>\n                                <Radio.Button value=\"bug\">\n                                    <FormattedMessage id=\"issue.type.bug\" defaultMessage=\"Bug Report\" />\n                                </Radio.Button>\n                                <Radio.Button value=\"feature\">\n                                    <FormattedMessage id=\"issue.type.feature\" defaultMessage=\"Feature Request\" />\n                                </Radio.Button>\n                            </Radio.Group>\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Form.Item\n                    name=\"title\"\n                    label={<FormattedMessage id=\"issue.title\" defaultMessage=\"Title\" />}\n                    rules={[{ required: true }]}\n                >\n                    <Input onBlur={handleTitleBlur} />\n                </Form.Item>\n                {similarIssues.length > 0 && similarIssuesList}\n                <Form.Item noStyle shouldUpdate={(prev, next) => prev.type !== next.type}>\n                    {() =>\n                        form.getFieldValue('type') === 'feature' ? <FeatureForm /> : <BugForm versions={versions} />\n                    }\n                </Form.Item>\n                <Form.Item>\n                    <div className={styles.submitBtn}>\n                        <Button type=\"primary\" size=\"large\" htmlType=\"submit\" icon={<BugOutlined />}>\n                            <FormattedMessage id=\"issue.preview\" defaultMessage=\"Preview\" />\n                        </Button>\n                    </div>\n                </Form.Item>\n            </Form>\n        </div>\n    )\n}\n\nexport default IssueForm\n","import * as api from '../api'\nimport { useCallback, useState } from 'react'\n\nexport default function useVersions() {\n    const [repoVersions, setRepoVersions] = useState<{ [repo: string]: string[] }>({})\n\n    const fetchVersions = useCallback((repo: string) => {\n        api.fetchVersions(repo).then((versions: string[]) =>\n            setRepoVersions(repoVersions => ({\n                ...repoVersions,\n                [repo]: versions\n            }))\n        )\n    }, [])\n\n    return { repoVersions, fetchVersions }\n}\n","import * as React from 'react'\nimport { IntlProvider, addLocaleData } from 'react-intl'\nimport { Layout, Button } from 'antd'\nimport Intro from './Intro'\nimport IssueForm from './IssueForm'\nimport LocaleContext, { switchLocale } from './LocaleContext'\nimport styles from './App.module.scss'\n\nconst { Header, Content, Footer } = Layout\n\nconst App: React.FC = () => {\n    const locale = React.useContext(LocaleContext)\n    const [localeString, forceUpdateLocale] = React.useState(locale)\n\n    const appLocale = window.appLocale[localeString]\n    addLocaleData(appLocale.data)\n\n    return (\n        <LocaleContext.Provider>\n            <Layout className=\"layout\">\n                <Header className={styles.header}>\n                    <div className={styles.headerContainer}>\n                        <div className={styles.logo}>\n                            <img alt=\"logo\" src=\"https://timecatjs.com/img/logo.png\" />\n                            <h1>Issue Helper</h1>\n                        </div>\n                        <div className={styles.locale}>\n                            <Button size=\"small\" onClick={() => switchLocale(forceUpdateLocale)}>\n                                {localeString === 'en' ? '中文' : 'English'}\n                            </Button>\n                        </div>\n                    </div>\n                </Header>\n                <IntlProvider locale={localeString} messages={appLocale.messages}>\n                    <Content className={styles.content}>\n                        <Intro />\n                        <IssueForm />\n                    </Content>\n                </IntlProvider>\n                <Footer style={{ textAlign: 'center' }}>\n                    Modified from <a href=\"https://github.com/ant-design/antd-issue-helper\">Antd Issue Helper</a>\n                </Footer>\n            </Layout>\n        </LocaleContext.Provider>\n    )\n}\n\nexport default App\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport './en-US'\nimport './zh-CN'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__2L3DO\",\"headerContainer\":\"App_headerContainer__3EsT6\",\"logo\":\"App_logo__2qPv-\",\"content\":\"App_content__1Wt3K\"};"],"sourceRoot":""}